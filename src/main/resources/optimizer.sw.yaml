version: "1.0"
specVersion: "0.8"
id: optimizer
name: Optimizer workflow
description: Optimizes a cluster's workload resources
dataInputSchema:
  schema: schemas/input.json
  failOnValidationErrors: true
extensions:
  - extensionid: workflow-output-schema
    outputSchema: schemas/output.json
functions:
  - name: log
    operation: sysout
    type: custom
  - name: listDeployments
    operation: 'specs/openshift-deployments-openapi.yaml#listAppsV1NamespacedDeployment'
  - name: updateDeployment
    operation: 'specs/openshift-deployments-openapi.yaml#patchAppsV1NamespacedDeployment'
start: Patch the workload resources
states:
  - name: Patch the workload resources
    type: operation
    stateDataFilter:
      input: '{name: .workload, namespace: .project, resources: {requests: {cpu: .requests.cpu | gsub(" #.*$|^-$"; ""), memory: .requests.memory | gsub(" #.*$|^-$"; "")}, limits: {cpu: .limits.cpu | gsub(" #.*$|^-$"; ""), memory: .limits.memory | gsub(" #.*$|^-$"; "")}}}'
      output: '{result: .response.spec.template.spec.containers[0]}'
    actions:
      - functionRef:
          refName: updateDeployment
          arguments:
            # dryRun: "All" <-- Doesn't work!!!
            namespace: "${ .namespace }"
            name: "${ .name }"
            payload:
              - op: replace
                path: /spec/template/spec/containers/0/resources
                value: "${ .resources | walk(if type == \"object\" then with_entries(select(.value != \"\")) else . end) }"
        actionDataFilter:
          toStateData: "${ .response }"
    transition: Log result
  - name: Log result
    type: operation
    actions:
      - functionRef:
          refName: log
          arguments:
            message: "${ .result }"
    end: true
